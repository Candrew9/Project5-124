/**

 * 
 */
package prj5;

import CS2114.Button;

import CS2114.Shape;
import CS2114.TextShape;
import CS2114.Window;
import CS2114.WindowSide;
import list.AList;
import java.awt.Color;

/**
 * Creates a window
 * @author Cole Steigman, Brooke Fey, Andrew Caldwell
 * @version 2018.11.11
 */
public class DisplayWindow {

    private Window window;
    private Button sortByArtistNameButton;
    private Button sortBySongTitleButton;
    private Button sortByReleaseYearButton;
    private Button sortByGenreButton;
    private Button representHobbyButton;
    private Button representMajorButton;
    private Button representRegionButton;
    private Button quitButton;
    private Button previousButton;
    private Button nextButton;
    private TextShape legend1Text;
    private TextShape legend2Text;
    private TextShape legend3Text;
    private TextShape legend4Text;
    private TextShape legend0Text;
    private TextShape legendSongTitleText;
    private TextShape legendHeardText;
    private TextShape legendLikesText;
    private Shape bar1Shape;
    private Shape bar2Shape;
    private Shape bar3Shape;
    private Shape bar4Shape;
    private Shape bar5Shape;
    private Shape bar6Shape;
    private Shape bar7Shape;
    private Shape bar8Shape;
    private Shape barVertShape;
    private TextShape songTitleText;
    private TextShape songArtistText;
    private AList<Shape> glyphs;
    private AList<Shape> bars;
    
    //Glyph
    private static final int BAR_HEIGHT = 10;
    private CombinationCalculator calc;
    private Input input;
    private PercentCalculator percent;
    private String clicked;
    //Legend
    
    public DisplayWindow()
    {
        window = new Window();
        window.setTitle("Project 5");
        window.setSize(500,600);
        
        //Sets up the buttons
        previousButton = new Button("Previous");
        window.addButton(previousButton, WindowSide.NORTH);
        previousButton.onClick(this, "clickedPrev");
        sortByArtistNameButton = new Button("Sort By Artist Name");
        window.addButton(sortByArtistNameButton, WindowSide.NORTH);
        sortByArtistNameButton.onClick(this, "clickedArtistName");
        sortBySongTitleButton = new Button("Sort By Song Title");
        window.addButton(sortBySongTitleButton, WindowSide.NORTH);
        sortBySongTitleButton.onClick(this, "clickedSongTitle");
        sortByReleaseYearButton = new Button("Sort By Release Year");
        window.addButton(sortByReleaseYearButton, WindowSide.NORTH);
        sortByReleaseYearButton.onClick(this, "clickedReleaseYear");
        sortByGenreButton = new Button("Sort By Genre");
        window.addButton(sortByGenreButton, WindowSide.NORTH);
        sortByGenreButton.onClick(this, "clickedGenre");
        representHobbyButton = new Button("Represent Hobby");
        window.addButton(representHobbyButton, WindowSide.SOUTH);
        representHobbyButton.onClick(this, "clickedHobby");
        representMajorButton = new Button("Represent Major");
        window.addButton(representMajorButton, WindowSide.SOUTH);
        representMajorButton.onClick(this, "clickedMajor");
        representRegionButton = new Button("Represent Region");
        window.addButton(representRegionButton, WindowSide.SOUTH);
        representRegionButton.onClick(this, "clickedRegion");
        quitButton = new Button("Quit");
        window.addButton(quitButton, WindowSide.SOUTH);
        quitButton.onClick(this, "clickedQuit");
        nextButton = new Button("Next");
        window.addButton(nextButton, WindowSide.NORTH);
        nextButton.onClick(this, "clickedNext");
        
        makeLegend("Default");
        
        makeGlyph("Default", 0);    
        
        input = new Input();
        percent = new PercentCalculator();
        //percent.calculate(category, survey, heards, likes);
        
        
    }
    
    public void clickedQuit(Button quit)
    {
        System.exit(0);
    }
    
    public void clickedNext(Button next)
    {
        
    }
    
    public void clickedPrev(Button prev)
    {
        
    }
    
    public void clickedArtistName(Button name)
    {
        sortGlyphs("name");
    }
    
    public void clickedSongTitle(Button title)
    {
        sortGlyphs("title");
    }
    
    public void clickedReleaseYear(Button year)
    {
        sortGlyphs("year");
    }
    
    public void clickedGenre(Button genre)
    {
        sortGlyphs("genre");
    }
    
    public void clickedHobby(Button hobby)
    {
        clicked = "Hobby";
        window.removeAllShapes();
        makeLegend("Hobby");
    }
    
    public void clickedRegion(Button region)
    {
        clicked = "Region";
        window.removeAllShapes();
        makeLegend("Region");
    }
    
    public void clickedMajor(Button major)
    {
        clicked = "Major";
        window.removeAllShapes();
        makeLegend("Major");
    }
    
    public void sortGlyphs(String sort)
    {
        glyphs = new AList<Shape>();
        if (sort.equals("name"))
        {
            for (int i = 0; i < 9; i++)
            {
                makeGlyph(clicked, i);
                //Add sort by name method
            }
        }
        else if (sort.equals("title"))
        {
            for (int i = 0; i < 9; i++)
            {
                makeGlyph(clicked, i);
                //Add sort by title method
            }
        }
        else if (sort.equals("year"))
        {
            for (int i = 0; i < 9; i++)
            {
                makeGlyph(clicked, i);
                //Add sort by year method
            }
        }
        else
        {
            for (int i = 0; i < 9; i++)
            {
                makeGlyph(clicked, i);
                //Default sort
            }
        }
    }
    
    public void makeGlyph(String clicked, int i)
    {
        bars = new AList<Shape>();
        int barX = findBarX(i);
        int barY = findBarY(i);
        String songName = "Gold Digger"; //Change
        String artistName = "Kanye West"; //Change
        barVertShape = new Shape(barX, barY, 10, 40, Color.BLACK);
        window.addShape(barVertShape);
                
        if (clicked.equals("Hobby"))
        {
            //Likes
            bar1Shape = new Shape(barX, barY, percent.percentageLikes(2)[0], BAR_HEIGHT, Color.PINK); 
            bar2Shape = new Shape(barX, barY + 10, percent.percentageLikes(2)[1], BAR_HEIGHT, Color.BLUE);
            bar3Shape = new Shape(barX, barY + 20, percent.percentageLikes(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar4Shape = new Shape(barX, barY + 30, percent.percentageLikes(2)[3], BAR_HEIGHT, Color.GREEN);
            
            //Heard
            bar5Shape = new Shape(barX - (10 + percent.percentageHeard(2)[0]), barY, percent.percentageHeard(2)[0], BAR_HEIGHT, Color.PINK); 
            bar6Shape = new Shape(barX - (10 + percent.percentageHeard(2)[1]), barY + 10, percent.percentageHeard(2)[1], BAR_HEIGHT, Color.BLUE);
            bar7Shape = new Shape(barX - (10 + percent.percentageHeard(2)[2]), barY + 20, percent.percentageHeard(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar8Shape = new Shape(barX - (10 + percent.percentageHeard(2)[3]), barY + 30, percent.percentageHeard(2)[3], BAR_HEIGHT, Color.GREEN);
        }
        else if (clicked.equals("Major"))
        {
          //Likes
            bar1Shape = new Shape(barX, barY, percent.percentageLikes(2)[0], BAR_HEIGHT, Color.PINK); 
            bar2Shape = new Shape(barX, barY + 10, percent.percentageLikes(2)[1], BAR_HEIGHT, Color.BLUE);
            bar3Shape = new Shape(barX, barY + 20, percent.percentageLikes(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar4Shape = new Shape(barX, barY + 30, percent.percentageLikes(2)[3], BAR_HEIGHT, Color.GREEN);
            
            //Heard
            bar5Shape = new Shape(barX - (10 + percent.percentageHeard(2)[0]), barY, percent.percentageHeard(2)[0], BAR_HEIGHT, Color.PINK); 
            bar6Shape = new Shape(barX - (10 + percent.percentageHeard(2)[1]), barY + 10, percent.percentageHeard(2)[1], BAR_HEIGHT, Color.BLUE);
            bar7Shape = new Shape(barX - (10 + percent.percentageHeard(2)[2]), barY + 20, percent.percentageHeard(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar8Shape = new Shape(barX - (10 + percent.percentageHeard(2)[3]), barY + 30, percent.percentageHeard(2)[3], BAR_HEIGHT, Color.GREEN);
        }
        else if (clicked.equals("Region"))
        {
          //Likes
            bar1Shape = new Shape(barX, barY, percent.percentageLikes(2)[0], BAR_HEIGHT, Color.PINK); 
            bar2Shape = new Shape(barX, barY + 10, percent.percentageLikes(2)[1], BAR_HEIGHT, Color.BLUE);
            bar3Shape = new Shape(barX, barY + 20, percent.percentageLikes(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar4Shape = new Shape(barX, barY + 30, percent.percentageLikes(2)[3], BAR_HEIGHT, Color.GREEN);
            
            //Heard
            bar5Shape = new Shape(barX - (10 + percent.percentageHeard(2)[0]), barY, percent.percentageHeard(2)[0], BAR_HEIGHT, Color.PINK); 
            bar6Shape = new Shape(barX - (10 + percent.percentageHeard(2)[1]), barY + 10, percent.percentageHeard(2)[1], BAR_HEIGHT, Color.BLUE);
            bar7Shape = new Shape(barX - (10 + percent.percentageHeard(2)[2]), barY + 20, percent.percentageHeard(2)[2], BAR_HEIGHT, Color.ORANGE);
            bar8Shape = new Shape(barX - (10 + percent.percentageHeard(2)[3]), barY + 30, percent.percentageHeard(2)[3], BAR_HEIGHT, Color.GREEN);
        }
        else
        {
            //Do nothing
        }                       
        window.addShape(bar1Shape);        
        window.addShape(bar2Shape);        
        window.addShape(bar3Shape);        
        window.addShape(bar4Shape);
        songTitleText = new TextShape(barX + 10, barY - 40, songName); //Change to title
        songTitleText.setBackgroundColor(Color.WHITE);
        window.addShape(songTitleText);
        songArtistText = new TextShape(barX + 10, barY - 20, artistName); //Change to name
        songArtistText.setBackgroundColor(Color.WHITE);
        window.addShape(songArtistText);
         
    }
    
    public int findBarX(int i)
    {
        int x = (i % 3) * 100 + 150;
        return x;
    }
    
    public int findBarY(int i)
    {
        int y = 0;
        if (i < 2)
        {
            y = 100;
        }
        else if (i < 5)
        {
            y = 250;
        }
        else
        {
            y = 400;
        }
        return y;
    }
    
    public void makeLegend(String clicked)
    {
        if (clicked.equals("Hobby"))
        {
            legend0Text = new TextShape(620, 300, "Hobby Legend");
            legend1Text = new TextShape(600, 320, "Read");
            legend2Text = new TextShape(600, 340, "Art");
            legend3Text = new TextShape(600, 360, "Sports");
            legend4Text =  new TextShape(600, 380, "Music");
        }
        else if(clicked.equals("Region"))
        {
            legend0Text = new TextShape(620, 300, "Region Legend");
            legend1Text = new TextShape(600, 320, "Northeast");
            legend2Text = new TextShape(600, 340, "Southeast");
            legend3Text = new TextShape(600, 360, "Other US");
            legend4Text =  new TextShape(600, 380, "Outside US");
        }
        else if (clicked.equals("Major"))
        {
            legend0Text = new TextShape(620, 300, "Major Legend");
            legend1Text = new TextShape(600, 320, "Computer Science");
            legend2Text = new TextShape(600, 340, "Other Engineering");
            legend3Text = new TextShape(600, 360, "Math or CMDA");
            legend4Text =  new TextShape(600, 380, "Other");
        }
        else
        {
            //Do nothing
        }
        legend0Text.setBackgroundColor(Color.WHITE);
        window.addShape(legend0Text);
        legend1Text.setBackgroundColor(Color.WHITE);
        legend1Text.setForegroundColor(Color.PINK);
        window.addShape(legend1Text);
        legend2Text.setBackgroundColor(Color.WHITE);
        legend2Text.setForegroundColor(Color.BLUE);
        window.addShape(legend2Text);
        legend3Text.setBackgroundColor(Color.WHITE);
        legend3Text.setForegroundColor(Color.ORANGE);
        window.addShape(legend3Text);
        legend4Text.setBackgroundColor(Color.WHITE);
        legend4Text.setForegroundColor(Color.GREEN);
        window.addShape(legend4Text);
        legendSongTitleText = new TextShape(620, 400, "Song Title");
        legendSongTitleText.setBackgroundColor(Color.WHITE);
        window.addShape(legendSongTitleText);
        legendHeardText = new TextShape(600, 430, "Heard");
        legendHeardText.setBackgroundColor(Color.WHITE);
        window.addShape(legendHeardText);
        legendLikesText = new TextShape(680, 430, "Likes");
        legendLikesText.setBackgroundColor(Color.WHITE);
        window.addShape(legendLikesText);
        barVertShape = new Shape(660, 410, 10, 50, Color.BLACK);
        window.addShape(barVertShape);
    }
}
